Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
%start s
%token EOF
%token B
%token A

%type <int> s
%%

s:
  _2 = EOF
    {let _1 =
      ( None )
in
                                                     ( 0 )}
| _1000 = A x000 = B _3000 = A _2 = EOF
    {let _1 =
  let _300 = _3000 in
  let x00 = x000 in
  let _100 = _1000 in
  let x =
    let _30 = _300 in
    let x0 = x00 in
    let _10 = _100 in
    let y =
      let _3 = _30 in
      let x = x0 in
      let _1 = _10 in
          ( x )
    in
    let x =
          ( None )
    in
        ( (x, y) )
  in
      ( Some x )
in
                                                     ( 0 )}
| x000 = A _1000 = A x100 = B _3000 = A _2 = EOF
    {let _1 =
  let _300 = _3000 in
  let x10 = x100 in
  let _100 = _1000 in
  let x00 = x000 in
  let x =
    let _30 = _300 in
    let x1 = x10 in
    let _10 = _100 in
    let x0 = x00 in
    let y =
      let _3 = _30 in
      let x = x1 in
      let _1 = _10 in
          ( x )
    in
    let x =
      let x = x0 in
          ( Some x )
    in
        ( (x, y) )
  in
      ( Some x )
in
                                                     ( 0 )}

%%



