File "cime-syntax.mly", line 42, characters 19-33:
Warning: the token DP_TERMINATION is unused.
File "cime-syntax.mly", line 38, characters 41-50:
Warning: the token GUILLEMET is unused.
File "cime-syntax.mly", line 46, characters 45-58:
Warning: the token LIBRE_UNIFIER is unused.
File "cime-syntax.mly", line 45, characters 7-15:
Warning: the token MATCHING is unused.
File "cime-syntax.mly", line 42, characters 7-18:
Warning: the token TERMINAISON is unused.
Grammar has 58 nonterminal symbols, among which 3 start symbols.
Grammar has 70 terminal symbols.
Grammar has 136 productions.
nullable(unif_type) = false
nullable(theorie) = false
nullable(term_list) = false
nullable(term_eof) = false
nullable(term) = false
nullable(subsortes) = false
nullable(statuts) = false
nullable(statut) = false
nullable(sortes) = false
nullable(signature_eof) = false
nullable(rps_header) = false
nullable(regle_list) = false
nullable(regle) = false
nullable(profile_list) = false
nullable(profile) = false
nullable(problemes) = false
nullable(probleme) = false
nullable(precedence) = true
nullable(poly_var_list_end) = false
nullable(poly_ident) = false
nullable(poly_decl_list) = false
nullable(poly_decl) = false
nullable(poly) = false
nullable(ordre_plus) = false
nullable(ordre_List) = false
nullable(ordre) = false
nullable(operateurs) = false
nullable(op_list_colon) = false
nullable(op_list) = false
nullable(mu_value) = true
nullable(liste_ordonnee) = false
nullable(lexstat) = false
nullable(keyword_user) = false
nullable(keyword_theory) = false
nullable(keyword_subsortes) = false
nullable(keyword_sortes) = false
nullable(keyword_rpo) = false
nullable(keyword_problems) = false
nullable(keyword_poly) = false
nullable(keyword_order) = false
nullable(keyword_operators) = false
nullable(keyword_mapo) = false
nullable(keyword_inductive) = false
nullable(keyword_conjectures) = false
nullable(keyword_axioms) = false
nullable(ident) = false
nullable(id_list_end) = false
nullable(fix) = true
nullable(equations) = false
nullable(equation) = false
nullable(entete_poly) = false
nullable(donnees) = false
nullable(declaration) = false
nullable(decl_theorie) = false
nullable(decl_arite) = false
nullable(base_sorte) = false
nullable(arityaux) = false
nullable(arity) = false
first(unif_type) = TOKEN_AC PLAIN
first(theorie) = TOKEN_USER IDENT
first(term_list) = PREFIX_IDENT PARGAUCHE
first(term_eof) = PREFIX_IDENT PARGAUCHE
first(term) = PREFIX_IDENT PARGAUCHE
first(subsortes) = IDENT
first(statuts) = IDENT
first(statut) = IDENT
first(sortes) = IDENT
first(signature_eof) = IDENT
first(rps_header) = TOKEN_RPS
first(regle_list) = PREFIX_IDENT PARGAUCHE
first(regle) = PREFIX_IDENT PARGAUCHE
first(profile_list) = IDENT
first(profile) = IDENT
first(problemes) = UNIFIER TOKEN_AC REDUIRE PREFIX_IDENT PLAIN PARGAUCHE MATCHER COMPARER
first(probleme) = UNIFIER TOKEN_AC REDUIRE PREFIX_IDENT PLAIN PARGAUCHE MATCHER COMPARER
first(precedence) = IDENT
first(poly_var_list_end) = POLY_VAR
first(poly_ident) = IDENT
first(poly_decl_list) = CROGAUCHE
first(poly_decl) = CROGAUCHE
first(poly) = POLY_VAR PARGAUCHE MINUS INT
first(ordre_plus) = TOKEN_SEMI_INTERACTIF TOKEN_RPS TOKEN_RPO TOKEN_POLY TOKEN_MAPO TOKEN_LEXICO TOKEN_INTERACTIF
first(ordre_List) = TOKEN_RPS TOKEN_RPO TOKEN_POLY TOKEN_MAPO TOKEN_LEXICO TOKEN_INTERACTIF
first(ordre) = TOKEN_RPS TOKEN_RPO TOKEN_POLY TOKEN_MAPO TOKEN_LEXICO TOKEN_INTERACTIF
first(operateurs) = IDENT
first(op_list_colon) = IDENT
first(op_list) = IDENT
first(mu_value) = INT
first(liste_ordonnee) = IDENT
first(lexstat) = RLLEX LRLEX
first(keyword_user) = TOKEN_USER
first(keyword_theory) = THEORIE
first(keyword_subsortes) = SUBSORTES
first(keyword_sortes) = SORTES
first(keyword_rpo) = TOKEN_RPO
first(keyword_problems) = PROBLEMES
first(keyword_poly) = TOKEN_POLY
first(keyword_order) = ORDRE
first(keyword_operators) = OPERATEURS
first(keyword_mapo) = TOKEN_MAPO
first(keyword_inductive) = INDUCTIVE
first(keyword_conjectures) = CONJECTURES
first(keyword_axioms) = EQUATIONS
first(ident) = IDENT
first(id_list_end) = IDENT
first(fix) = PREFIXE POSTFIXE INFIXE
first(equations) = PREFIX_IDENT PARGAUCHE
first(equation) = PREFIX_IDENT PARGAUCHE
first(entete_poly) = CROGAUCHE
first(donnees) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
first(declaration) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS INDUCTIVE EQUATIONS CONJECTURES
first(decl_theorie) = TOKEN_USER IDENT
first(decl_arite) = IDENT
first(base_sorte) = IDENT
first(arityaux) = UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC INT CONSTANTE BINAIRE
first(arity) = UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC INT CONSTANTE BINAIRE
follow(unif_type) = UNIFIER UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(theorie) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(term_list) = PARDROITE
follow(term_eof) = #
follow(term) = WITH VIRGULE POINT_VIRGULE PARDROITE INFIX_IDENT FLECHE EOF EGAL
follow(subsortes) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(statuts) = PARDROITE
follow(statut) = VIRGULE PARDROITE
follow(sortes) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(signature_eof) = #
follow(rps_header) = PREFIX_IDENT PARGAUCHE
follow(regle_list) = PARDROITE
follow(regle) = POINT_VIRGULE PARDROITE
follow(profile_list) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES
follow(profile) = VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES
follow(problemes) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(probleme) = POINT_VIRGULE
follow(precedence) = POINT_VIRGULE PARDROITE
follow(poly_var_list_end) = EGAL
follow(poly_ident) = CRODROIT
follow(poly_decl_list) = PARDROITE
follow(poly_decl) = POINT_VIRGULE PARDROITE
follow(poly) = POINT_VIRGULE PLUS PARDROITE MULT MINUS EXP
follow(ordre_plus) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(ordre_List) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(ordre) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE PARDROITE ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(operateurs) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(op_list_colon) = UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC PREFIXE POSTFIXE INT INFIXE CONSTANTE BINAIRE
follow(op_list) = DEUX_POINTS
follow(mu_value) = CROGAUCHE
follow(liste_ordonnee) = VIRGULE POINT_VIRGULE PARDROITE
follow(lexstat) = VIRGULE PARDROITE
follow(keyword_user) = PARGAUCHE
follow(keyword_theory) = TOKEN_USER IDENT
follow(keyword_subsortes) = IDENT
follow(keyword_sortes) = IDENT
follow(keyword_rpo) = PARGAUCHE
follow(keyword_problems) = UNIFIER TOKEN_AC REDUIRE PREFIX_IDENT PLAIN PARGAUCHE MATCHER COMPARER
follow(keyword_poly) = PARGAUCHE
follow(keyword_order) = TOKEN_SEMI_INTERACTIF TOKEN_RPS TOKEN_RPO TOKEN_POLY TOKEN_MAPO TOKEN_LEXICO TOKEN_INTERACTIF
follow(keyword_operators) = IDENT
follow(keyword_mapo) = PARGAUCHE
follow(keyword_inductive) = PREFIX_IDENT PARGAUCHE
follow(keyword_conjectures) = PREFIX_IDENT PARGAUCHE
follow(keyword_axioms) = PREFIX_IDENT PARGAUCHE
follow(ident) = VIRGULE SUPERIEUR RLLEX POINT_VIRGULE PARGAUCHE PARDROITE MUL LRLEX INFERIEUR EGAL DEUX_POINTS CRODROIT
follow(id_list_end) = UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES
follow(fix) = UNAIRE TOKEN_VARIABLE TOKEN_C TOKEN_AC INT CONSTANTE BINAIRE
follow(equations) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(equation) = POINT_VIRGULE
follow(entete_poly) = EGAL
follow(donnees) = #
follow(declaration) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE EQUATIONS EOF CONJECTURES
follow(decl_theorie) = UNIFICATION TOKEN_USER TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES
follow(decl_arite) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES
follow(base_sorte) = VIRGULE UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INFERIEUR INDUCTIVE IDENT FLECHE EQUATIONS EOF CONJECTURES
follow(arityaux) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS
follow(arity) = UNIFICATION TOKEN_INCLUDE THEORIE SUBSORTES SORTES PROBLEMES POINT_VIRGULE ORDRE OPERATEURS KW_END INDUCTIVE IDENT EQUATIONS EOF CONJECTURES AS
Built an LR(0) automaton with 253 states.
The grammar is not SLR(1) -- 6 states have a conflict.
Built an LR(1) automaton with 253 states.
18 shift/reduce conflicts were silently solved.
73 out of 253 states are represented.
0 out of 133 symbols keep track of their start position.
0 out of 133 symbols keep track of their end position.
103 out of 253 states have a default reduction.
86 out of 139 productions exploit shiftreduce optimization.
0 out of 253 states can peek at an error.
711 functions before inlining, 84 functions after inlining.
