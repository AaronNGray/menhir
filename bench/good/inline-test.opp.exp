Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
%start prog
%token <int> INT
%token EOF
%token PLUS
%token TIMES
%left PLUS 
%left TIMES 
%type <int> prog
%%

prog:
| x = exp _2 = EOF
    {                ( x )}

exp:
| x = INT
    {                     ( x )}
| lhs = exp _10 = PLUS rhs = exp
    {let op =
  let _1 = _10 in
  (                 ( fun x y -> x + y ))
in
                                    ( op lhs rhs )}
| lhs = exp _10 = TIMES rhs = exp
    {let op =
  let _1 = _10 in
  (                  ( fun x y -> x * y ))
in
                                    ( op lhs rhs )}

%%



