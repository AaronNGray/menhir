%start s
%token A
%token B
%token EOF
%type <int> s
%%

s:
  _2 = EOF
    {let _1 =     ( None ) in
                                                     ( 0 )}
| _1' = A x' = B _3 = A _2 = EOF
    {let _1 =
  let _1 = _1' in
  let x =
    let x = x' in
    let y =     ( x ) in
    let x =     ( None ) in
        ( (x, y) )
  in
      ( Some x )
in
                                                     ( 0 )}
| x' = A _1' = A x' = B _3 = A _2 = EOF
    {let _1 =
  let _1 = _1' in
  let x =
    let x = x' in
    let y =     ( x ) in
    let x =
      let x = x' in
          ( Some x )
    in
        ( (x, y) )
  in
      ( Some x )
in
                                                     ( 0 )}

%%


