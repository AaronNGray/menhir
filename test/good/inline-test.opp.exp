%start prog
%token EOF
%token <int> INT
%token PLUS
%token TIMES
%left PLUS
%left TIMES
%type <int> prog
%%

prog:
  x = exp _2 = EOF
    {                ( x )}

exp:
  x = INT
    {                     ( x )}
| lhs = exp _10 = PLUS rhs = exp
    {let op =
  let _1 = _10 in
                   ( fun x y -> x + y )
in
                                    ( op lhs rhs )}
| lhs = exp _10 = TIMES rhs = exp
    {let op =
  let _1 = _10 in
                    ( fun x y -> x * y )
in
                                    ( op lhs rhs )}

%%


