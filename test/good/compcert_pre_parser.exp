Note: the nonterminal symbol option (from compcert_pre_parser.mly) is renamed compcert_pre_parser_option.
Grammar has 104 nonterminal symbols, among which 1 start symbols.
Grammar has 93 terminal symbols.
Grammar has 402 productions.
nullable(unary_operator) = false
nullable(unary_expression) = false
nullable(typedef_declarator_list) = false
nullable(typedef_declarator) = false
nullable(type_specifier_no_typedef_name) = false
nullable(type_qualifier_list) = false
nullable(type_qualifier) = false
nullable(type_name) = false
nullable(translation_unit_file) = false
nullable(translation_unit) = false
nullable(struct_or_union_specifier) = false
nullable(struct_or_union) = false
nullable(struct_declarator_list) = false
nullable(struct_declarator) = false
nullable(struct_declaration_list) = true
nullable(struct_declaration) = false
nullable(string_literals_list) = false
nullable(storage_class_specifier_no_typedef) = false
nullable(statement_intern) = false
nullable(statement_finish) = false
nullable(specifier_qualifier_list_no_typedef_name) = false
nullable(specifier_qualifier_list) = false
nullable(shift_expression) = false
nullable(selection_statement_intern) = false
nullable(selection_statement_finish) = false
nullable(relational_expression) = false
nullable(push_context) = true
nullable(primary_expression) = false
nullable(postfix_expression) = false
nullable(pop_context) = true
nullable(pointer) = false
nullable(parameter_type_list) = false
nullable(parameter_list) = false
nullable(parameter_declaration) = false
nullable(multiplicative_expression) = false
nullable(logical_or_expression) = false
nullable(logical_and_expression) = false
nullable(labeled_statement(statement_intern)) = false
nullable(labeled_statement(statement_finish)) = false
nullable(jump_statement) = false
nullable(iteration_statement(statement_intern)) = false
nullable(iteration_statement(statement_finish)) = false
nullable(initializer_list) = false
nullable(init_declarator_list) = false
nullable(init_declarator) = false
nullable(inclusive_or_expression) = false
nullable(in_context(declaration_list)) = true
nullable(in_context(compcert_pre_parser_option(parameter_type_list))) = true
nullable(in_context(compcert_pre_parser_option(block_item_list))) = true
nullable(identifier_list) = false
nullable(general_identifier) = false
nullable(gcc_attribute_word) = false
nullable(gcc_attribute_list) = true
nullable(gcc_attribute) = true
nullable(function_specifier) = false
nullable(function_definition_begin) = false
nullable(function_definition) = false
nullable(external_declaration) = false
nullable(expression_statement) = false
nullable(expression) = false
nullable(exclusive_or_expression) = false
nullable(equality_expression) = false
nullable(enumerator_list) = false
nullable(enumerator) = false
nullable(enumeration_constant) = false
nullable(enum_specifier) = false
nullable(direct_declarator) = false
nullable(direct_abstract_declarator) = false
nullable(designator_list) = false
nullable(designator) = false
nullable(designation) = false
nullable(declare_varname(fst(declarator))) = false
nullable(declare_varname(enumerator)) = false
nullable(declare_typename(fst(declarator))) = false
nullable(declarator) = false
nullable(declaration_specifiers_typedef) = false
nullable(declaration_specifiers_no_typedef_name) = false
nullable(declaration_specifiers_no_type) = false
nullable(declaration_specifiers) = false
nullable(declaration_list) = true
nullable(declaration) = false
nullable(constant_expression) = false
nullable(conditional_expression) = false
nullable(compound_statement) = false
nullable(cast_expression) = false
nullable(c_initializer) = false
nullable(block_item_list) = false
nullable(block_item) = false
nullable(attribute_specifier_list) = true
nullable(attribute_specifier) = false
nullable(assignment_operator) = false
nullable(assignment_expression) = false
nullable(asm_statement) = false
nullable(asm_operands_ne) = false
nullable(asm_operands) = true
nullable(asm_operand) = false
nullable(asm_op_name) = true
nullable(asm_flags) = false
nullable(asm_attributes) = true
nullable(asm_arguments) = true
nullable(argument_expression_list) = false
nullable(and_expression) = false
nullable(additive_expression) = false
nullable(abstract_declarator) = false
first(unary_operator) = TILDE STAR PLUS MINUS BANG AND
first(unary_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(typedef_declarator_list) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(typedef_declarator) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(type_specifier_no_typedef_name) = VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT LONG INT FLOAT ENUM DOUBLE CHAR
first(type_qualifier_list) = VOLATILE RESTRICT PACKED CONST ATTRIBUTE ALIGNAS
first(type_qualifier) = VOLATILE RESTRICT PACKED CONST ATTRIBUTE ALIGNAS
first(type_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(translation_unit_file) = error VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(translation_unit) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(struct_or_union_specifier) = UNION STRUCT
first(struct_or_union) = UNION STRUCT
first(struct_declarator_list) = VAR_NAME TYPEDEF_NAME STAR LPAREN COLON
first(struct_declarator) = VAR_NAME TYPEDEF_NAME STAR LPAREN COLON
first(struct_declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(struct_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(string_literals_list) = STRING_LITERAL
first(storage_class_specifier_no_typedef) = STATIC REGISTER EXTERN AUTO
first(statement_intern) = WHILE VAR_NAME TYPEDEF_NAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF
first(statement_finish) = WHILE VAR_NAME TYPEDEF_NAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF
first(specifier_qualifier_list_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(specifier_qualifier_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT SIGNED SHORT RESTRICT PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
first(shift_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(selection_statement_intern) = SWITCH IF
first(selection_statement_finish) = SWITCH IF
first(relational_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(push_context) = 
first(primary_expression) = VAR_NAME STRING_LITERAL LPAREN CONSTANT
first(postfix_expression) = VAR_NAME STRING_LITERAL LPAREN CONSTANT BUILTIN_VA_ARG
first(pop_context) = 
first(pointer) = STAR
first(parameter_type_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(parameter_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(parameter_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(multiplicative_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(logical_or_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(logical_and_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(labeled_statement(statement_intern)) = VAR_NAME TYPEDEF_NAME DEFAULT CASE
first(labeled_statement(statement_finish)) = VAR_NAME TYPEDEF_NAME DEFAULT CASE
first(jump_statement) = RETURN GOTO CONTINUE BREAK
first(iteration_statement(statement_intern)) = WHILE FOR DO
first(iteration_statement(statement_finish)) = WHILE FOR DO
first(initializer_list) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN LBRACK LBRACE INC DOT DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(init_declarator_list) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(init_declarator) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(inclusive_or_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(in_context(declaration_list)) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(in_context(compcert_pre_parser_option(parameter_type_list))) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(in_context(compcert_pre_parser_option(block_item_list))) = WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
first(identifier_list) = VAR_NAME
first(general_identifier) = VAR_NAME TYPEDEF_NAME
first(gcc_attribute_word) = VAR_NAME TYPEDEF_NAME PACKED CONST
first(gcc_attribute_list) = VAR_NAME TYPEDEF_NAME PACKED CONST COMMA
first(gcc_attribute) = VAR_NAME TYPEDEF_NAME PACKED CONST
first(function_specifier) = INLINE
first(function_definition_begin) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(function_definition) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(external_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRAGMA PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(expression_statement) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(exclusive_or_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(equality_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(enumerator_list) = VAR_NAME TYPEDEF_NAME
first(enumerator) = VAR_NAME TYPEDEF_NAME
first(enumeration_constant) = VAR_NAME TYPEDEF_NAME
first(enum_specifier) = ENUM
first(direct_declarator) = VAR_NAME TYPEDEF_NAME LPAREN
first(direct_abstract_declarator) = LPAREN LBRACK
first(designator_list) = LBRACK DOT
first(designator) = LBRACK DOT
first(designation) = LBRACK DOT
first(declare_varname(fst(declarator))) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(declare_varname(enumerator)) = VAR_NAME TYPEDEF_NAME
first(declare_typename(fst(declarator))) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(declarator) = VAR_NAME TYPEDEF_NAME STAR LPAREN
first(declaration_specifiers_typedef) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_specifiers_no_typedef_name) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_specifiers_no_type) = VOLATILE STATIC RESTRICT REGISTER PACKED INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS
first(declaration_specifiers) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
first(constant_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(conditional_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(compound_statement) = LBRACE
first(cast_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(c_initializer) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(block_item_list) = WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
first(block_item) = WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
first(attribute_specifier_list) = PACKED ATTRIBUTE ALIGNAS
first(attribute_specifier) = PACKED ATTRIBUTE ALIGNAS
first(assignment_operator) = XOR_ASSIGN SUB_ASSIGN RIGHT_ASSIGN OR_ASSIGN MUL_ASSIGN MOD_ASSIGN LEFT_ASSIGN EQ DIV_ASSIGN AND_ASSIGN ADD_ASSIGN
first(assignment_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(asm_statement) = ASM
first(asm_operands_ne) = STRING_LITERAL LBRACK
first(asm_operands) = STRING_LITERAL LBRACK
first(asm_operand) = STRING_LITERAL LBRACK
first(asm_op_name) = LBRACK
first(asm_flags) = STRING_LITERAL
first(asm_attributes) = VOLATILE CONST
first(asm_arguments) = COLON
first(argument_expression_list) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(and_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(additive_expression) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
first(abstract_declarator) = STAR LPAREN LBRACK
follow(unary_operator) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
follow(unary_expression) = error XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(typedef_declarator_list) = SEMICOLON COMMA
follow(typedef_declarator) = SEMICOLON COMMA
follow(type_specifier_no_typedef_name) = error VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(type_qualifier_list) = error VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TILDE STRUCT STRING_LITERAL STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT RBRACK PLUS PACKED MINUS LPAREN LONG LBRACK INT INC FLOAT ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS
follow(type_qualifier) = error VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PLUS PACKED MINUS LPAREN LONG LBRACK INT INLINE INC FLOAT EXTERN ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS
follow(type_name) = error RPAREN
follow(translation_unit_file) = #
follow(translation_unit) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(struct_or_union_specifier) = error VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(struct_or_union) = VAR_NAME TYPEDEF_NAME PACKED LBRACE ATTRIBUTE ALIGNAS
follow(struct_declarator_list) = SEMICOLON COMMA
follow(struct_declarator) = SEMICOLON COMMA
follow(struct_declaration_list) = error VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT SIGNED SHORT RESTRICT RBRACE PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
follow(struct_declaration) = error VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME STRUCT SIGNED SHORT RESTRICT RBRACE PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS
follow(string_literals_list) = error XOR_ASSIGN SUB_ASSIGN STRING_LITERAL STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(storage_class_specifier_no_typedef) = VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(statement_intern) = ELSE
follow(statement_finish) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(specifier_qualifier_list_no_typedef_name) = error VAR_NAME TYPEDEF_NAME STAR SEMICOLON RPAREN LPAREN LBRACK COLON
follow(specifier_qualifier_list) = error VAR_NAME TYPEDEF_NAME STAR SEMICOLON RPAREN LPAREN LBRACK COLON
follow(shift_expression) = error SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(selection_statement_intern) = ELSE
follow(selection_statement_finish) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(relational_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(push_context) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(primary_expression) = error XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(postfix_expression) = error XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(pop_context) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(pointer) = error VAR_NAME TYPEDEF_NAME RPAREN LPAREN LBRACK COMMA
follow(parameter_type_list) = RPAREN
follow(parameter_list) = RPAREN COMMA
follow(parameter_declaration) = RPAREN COMMA
follow(multiplicative_expression) = error STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(logical_or_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR
follow(logical_and_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND
follow(labeled_statement(statement_intern)) = ELSE
follow(labeled_statement(statement_finish)) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(jump_statement) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(iteration_statement(statement_intern)) = ELSE
follow(iteration_statement(statement_finish)) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(initializer_list) = error RBRACE COMMA
follow(init_declarator_list) = SEMICOLON COMMA
follow(init_declarator) = SEMICOLON COMMA
follow(inclusive_or_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND
follow(in_context(declaration_list)) = LBRACE
follow(in_context(compcert_pre_parser_option(parameter_type_list))) = RPAREN
follow(in_context(compcert_pre_parser_option(block_item_list))) = error RBRACE
follow(identifier_list) = RPAREN COMMA
follow(general_identifier) = error XOR_ASSIGN VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PLUS PERCENT PACKED OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN
follow(gcc_attribute_word) = RPAREN LPAREN COMMA
follow(gcc_attribute_list) = RPAREN COMMA
follow(gcc_attribute) = RPAREN COMMA
follow(function_specifier) = VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS
follow(function_definition_begin) = LBRACE
follow(function_definition) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(external_declaration) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(expression_statement) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(expression) = error SEMICOLON RPAREN RBRACK COMMA COLON
follow(exclusive_or_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND
follow(equality_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(enumerator_list) = error RBRACE COMMA
follow(enumerator) = error RBRACE COMMA
follow(enumeration_constant) = error RBRACE EQ COMMA
follow(enum_specifier) = error VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS
follow(direct_declarator) = SEMICOLON RPAREN PACKED LPAREN LBRACK LBRACE EQ COMMA COLON ATTRIBUTE ALIGNAS
follow(direct_abstract_declarator) = error RPAREN LPAREN LBRACK COMMA
follow(designator_list) = LBRACK EQ DOT
follow(designator) = LBRACK EQ DOT
follow(designation) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
follow(declare_varname(fst(declarator))) = SEMICOLON RPAREN EQ COMMA
follow(declare_varname(enumerator)) = error RBRACE COMMA
follow(declare_typename(fst(declarator))) = SEMICOLON COMMA
follow(declarator) = SEMICOLON RPAREN EQ COMMA COLON
follow(declaration_specifiers_typedef) = VAR_NAME TYPEDEF_NAME STAR SEMICOLON LPAREN
follow(declaration_specifiers_no_typedef_name) = VAR_NAME TYPEDEF_NAME TYPEDEF STAR SEMICOLON RPAREN LPAREN LBRACK COMMA
follow(declaration_specifiers_no_type) = VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE COMMA CHAR
follow(declaration_specifiers) = VAR_NAME TYPEDEF_NAME STAR SEMICOLON RPAREN LPAREN LBRACK COMMA
follow(declaration_list) = VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS
follow(declaration) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(constant_expression) = error SEMICOLON RBRACK RBRACE COMMA COLON
follow(conditional_expression) = error SEMICOLON RPAREN RBRACK RBRACE COMMA COLON
follow(compound_statement) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(cast_expression) = error XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN
follow(c_initializer) = error SEMICOLON RBRACE COMMA
follow(block_item_list) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(block_item) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(attribute_specifier_list) = VAR_NAME TYPEDEF_NAME SEMICOLON RPAREN PACKED LBRACE EQ COMMA COLON ATTRIBUTE ALIGNAS
follow(attribute_specifier) = error VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS
follow(assignment_operator) = VAR_NAME TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF
follow(assignment_expression) = error SEMICOLON RPAREN RBRACK RBRACE COMMA COLON
follow(asm_statement) = error WHILE VOLATILE VOID VAR_NAME UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS
follow(asm_operands_ne) = RPAREN COMMA COLON
follow(asm_operands) = RPAREN COLON
follow(asm_operand) = RPAREN COMMA COLON
follow(asm_op_name) = STRING_LITERAL
follow(asm_flags) = RPAREN
follow(asm_attributes) = LPAREN
follow(asm_arguments) = RPAREN
follow(argument_expression_list) = error RPAREN COMMA
follow(and_expression) = error SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND
follow(additive_expression) = error SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND
follow(abstract_declarator) = error RPAREN COMMA
Built an LR(0) automaton with 726 states.
The grammar is not SLR(1) -- 17 states have a conflict.
Built an LR(1) automaton with 1161 states.
One shift/reduce conflict was silently solved.
473 out of 1161 states have a default reduction.
575 out of 1161 states are represented.
2 out of 200 symbols keep track of their start position.
1 out of 200 symbols keep track of their end position.
190 out of 403 productions exploit shiftreduce optimization.
262 out of 1161 states can peek at an error.
The generated parser cannot raise Error.
2835 functions before inlining, 567 functions after inlining.
